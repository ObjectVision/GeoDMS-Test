container ReadElems_flag1
{
	parameter<string> csv_filename := '%projdir%/data/ReadElemsHuisNummer.csv';

	parameter<uint32> CommaAsDecimalSeparator_flag := 1;
	
	container TableChopper
	{
		unit<uint32>      domain         := range(uint32, 0, count_rows);
		parameter<string> fieldseparator := ';';
		parameter<string> filedata_src
		:  StorageType   = "str"
		,  StorageName = "=csv_filename"
		,  StorageReadOnly = "true";

		parameter<uint32> count_rows := strcount(filedata_src, '\n') - 1; //   4136157 

		parameter<string> headerline := readLines(filedata_src, void, 0);

		unit<uint32> field := Range(uint32, 0, strcount(headerline, fieldseparator) + 1)
		{
			attribute<string> name := ReadArray(headerline , field, string, 0);
		}

		attribute<string> bodylines (domain) := readLines(filedata_src, domain, headerline/ReadPos);

		container data :=
			for_each_nedv(
				field/name
				,	'ReadElems(BodyLines,float32, ' 
					+ MakeDefined(field/name[sub_or_null(id(field), 1)] + '/ReadPos','const(0, domain)')
					+',CommaAsDecimalSeparator_flag'
					')'
				,domain
				,float32
			);
	}

	parameter<bool> test := TableChopper/data/huisnr[1] == 2.1f && TableChopper/data/huisnr[2] == 2.2f;

	parameter<string> test_log := test
		? '' 
		: 'ReadElems flag1 Test: ' + expand(., '%configDir%') + '.dms ' + PropValue(test, 'fullname') + ' result: not OK'
	,	StorageType = "str"
	,	storagename = "%localDataDir%/GeoDMSTestResults/unit/operator/ReadElems_flag1.txt";
	
}
