container GridFromTemplate
{
	unit<float32> m             := baseunit('m', float32);
	unit<float32> coord_rd      := m;
	unit<fpoint>  point_rd_base : Format = "EPSG:28992";
	unit<fpoint>  point_rd      := range(point_rd_base, point_yx(300000[m],0[m]), point_yx(625000[m],280000[m]));

	container Studiegebied
	{
		parameter<coord_rd> left   := 89849.8[coord_rd];
		parameter<coord_rd> right  := 96170.6[coord_rd];
		parameter<coord_rd> bottom := 459114[coord_rd]; 
		parameter<coord_rd> top    := 466895[coord_rd]; 
	}

	container gridcel_5m:  = Scheme/Grid(  5[m], Studiegebied);

	container Scheme
	{
		container Grid: isTemplate = "True"
		{
			// begin case parameters
			parameter<m> gridsize;
			container bbox;
			// einde case parameters

			parameter<int16> nr_cols:= int16((bbox/right - bbox/left)   / gridsize);
			parameter<int16> nr_rows:= int16((bbox/top   - bbox/bottom) / gridsize);

			unit<spoint> untiled_domain:=
				range(
					 gridset(
						 point_rd
						,point_yx(float32(gridsize), float32(-gridsize), point_rd)
						,point_yx(bbox/left,bbox/top,point_rd)
						,spoint
					)
					,point_yx(int16(0), int16(0))
					,point_yx(nr_cols,nr_rows)
				)
			,	DialogData = "point_rd"
			{				
				attribute<.>     id  := id(.);
				attribute<int16> row := PointRow(id);
				attribute<int16> col := PointCol(id);

			}

			unit<spoint> domain := TiledUnit(point_yx(int16(1024),int16(1024), untiled_domain))
			{
				parameter<m>     size := gridsize;
				attribute<.>     id   := id(.);
				attribute<int16> row  := PointRow(id);
				attribute<int16> col  := PointCol(id);			
			}
		}
	}
	parameter<bool> test := count(gridcel_5m/domain/row) == 1966784 && max(gridcel_5m/domain/row) == 1263s && max(gridcel_5m/domain/col) == 1555s;

	parameter<string> test_log := test
		? '' 
		: 'GridFromTemplate Test: ' + expand(., '%configDir%') + '.dms ' + PropValue(test, 'fullname') + ' result: not OK'
	,	StorageType = "str"
	,	storagename = "%localDataDir%/GeoDMSTestResults/unit/other/GridFromTemplate.txt";

}