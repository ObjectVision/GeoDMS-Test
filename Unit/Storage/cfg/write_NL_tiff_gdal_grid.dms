container Write_NL_tiff_gdal_grid
{
	unit<fpoint>  rdc_base  
	:	DialogData = "wmts_layer" 
	,	Format     = "EPSG:28992";
	unit<fpoint> rdc_m := range(rdc_base, point(300000f,0f), point(625000f,280000f));

	 unit<spoint> rdc_100 := range(
		  gridset(
			  rdc_m
			 ,point(  -100f,   100f, rdc_m)
			 ,point(625000f, 10000f, rdc_m)
			 ,spoint
		  )
		  ,point(   0s,    0s)
		  ,point(3250s, 2700s)
	   ), DialogData = "rdc_m"
		{
			attribute<int16> PointRow := PointRow(id(.));
			attribute<int16> PointCol := PointRow(id(.));
			attribute<int16> RowCol   := PointRow + PointCol;
		}

	container Export
	{
		attribute<int16> GridData (rdc_100) := rdc_100/RowCol, StorageName = "%localDataDir%/GeoDMSTestResults/unit/storage/NL_tiff_gdal_grid.tif", StorageType = "gdalwrite.grid",	DialogData = "rdc_m";
	}

	unit<spoint> reRead: StorageName = "%localDataDir%/GeoDMSTestResults/unit/storage/NL_tiff_gdal_grid.tif", StorageName = "gdal.grid", StorageReadOnly = "True"
	{
		attribute<colorindex> GridData;
	}

	attribute<bool> test_griddata (reRead) := reRead/GridData == union_data(reRead, rdc_100/data);
	parameter<bool> test                   := all(test_griddata);

	parameter<string> test_log := test
		? '' 
		: 'Write NL Tiff with gdalwrite.grid: ' + expand(., '%configDir%') + '.dms ' + PropValue(test, 'fullname') + ' result: not OK'
	, StorageType = "str"
	, Storagename = "%localDataDir%/GeoDMSTestResults/unit/storage/WriteNLTiff_gdal.txt";

container wmts_layer 
{
  parameter<uint32> nr_att :=  8;
  parameter<uint32> nr_row := 15;

  unit<uint32> TileMatrixElems := range(uint32, 0, nr_att * nr_row)
   {
      attribute<string> values:      
        //name         , ScaleDen    , Top        , Left      ,Width ,Height , MatrixWidth, MatrixHeight
      [
        'EPSG:28992:0' ,'12288000'   ,'-285401.92', '903402.0', '256' ,'256' ,    '1'  ,    '1'
       ,'EPSG:28992:1' , '6144000'   ,'-285401.92', '903402.0', '256' ,'256' ,    '2'  ,    '2'
       ,'EPSG:28992:2' , '3072000'   ,'-285401.92', '903402.0', '256' ,'256' ,    '4'  ,    '4'
       ,'EPSG:28992:3' , '1536000'   ,'-285401.92', '903402.0', '256' ,'256' ,    '8'  ,    '8'
       ,'EPSG:28992:4' ,  '768000'   ,'-285401.92', '903402.0', '256' ,'256' ,   '16'  ,   '16'
       ,'EPSG:28992:5' ,  '384000'   ,'-285401.92', '903402.0', '256' ,'256' ,   '32'  ,   '32'
       ,'EPSG:28992:6' ,  '192000'   ,'-285401.92', '903402.0', '256' ,'256' ,   '64'  ,   '64'
       ,'EPSG:28992:7' ,   '96000'   ,'-285401.92', '903402.0', '256' ,'256' ,  '128'  ,  '128'
       ,'EPSG:28992:8' ,   '48000'   ,'-285401.92', '903402.0', '256' ,'256' ,  '256'  ,  '256'
       ,'EPSG:28992:9' ,   '24000'   ,'-285401.92', '903402.0', '256' ,'256' ,  '512'  ,  '512'
       ,'EPSG:28992:10',   '12000'   ,'-285401.92', '903402.0', '256' ,'256' , '1024'  , '1024'
       ,'EPSG:28992:11',    '6000'   ,'-285401.92', '903402.0', '256' ,'256' , '2048'  , '2048'
       ,'EPSG:28992:12',    '3000'   ,'-285401.92', '903402.0', '256' ,'256' , '4096'  , '4096'
       ,'EPSG:28992:13',    '1500'   ,'-285401.92', '903402.0', '256' ,'256' , '8192'  , '8192'
       ,'EPSG:28992:14',     '750'   ,'-285401.92', '903402.0', '256' ,'256' ,'16384'  ,'16384'
     ] ;
   }
   unit<uint32> TileMatrix := range(uint32, 0, nr_row)
   {
      attribute<.>       id                := id(.);
      attribute<string>  name              := TileMatrixElems/values[value(id * nr_att + 0, TileMatrixElems)];
      attribute<float64> ScaleDenominator  := float64(TileMatrixElems/values[value(id * nr_att + 1, TileMatrixElems)]);
      attribute<float64> LeftCoord         := float64(TileMatrixElems/values[value(id * nr_att + 2, TileMatrixElems)]);
      attribute<float64> TopCoord          := float64(TileMatrixElems/values[value(id * nr_att + 3, TileMatrixElems)]);
      attribute<uint16>  TileWidth         :=  uint16(TileMatrixElems/values[value(id * nr_att + 4, TileMatrixElems)]);
      attribute<uint16>  TileHeight        :=  uint16(TileMatrixElems/values[value(id * nr_att + 5, TileMatrixElems)]);
      attribute<uint32>  MatrixWidth       :=  uint32(TileMatrixElems/values[value(id * nr_att + 6, TileMatrixElems)]);
      attribute<uint32>  MatrixHeight      :=  uint32(TileMatrixElems/values[value(id * nr_att + 7, TileMatrixElems)]);
   }

    // Different examples of tested layers 
    parameter<string> layer  := 'grijs';
    // parameter<string> layer  := 'pastel'; 
    // parameter<string> layer  := 'standaard'; 
    // parameter<string> layer  := 'water'; 
  
     // parameter<string> layer  := 'Actueel_ortho25';  
     // parameter<string> image_format := 'jpeg'; 

    parameter<string> image_format := 'png8';
    parameter<string> host := 'service.pdok.nl';

    parameter<string> target := '/brt/achtergrondkaart/wmts/v2_0'
       '?SERVICE=WMTS'
       '&REQUEST=GetTile'
       '&VERSION=1.0.0'
       '&LAYER=' + layer +
       '&TILEMATRIXSET=EPSG:28992'
       '&TILEMATRIX=@TM@'
       '&TILEROW=@TR@'
       '&TILECOL=@TC@'
       '&FORMAT=image/'+image_format
  ;
}
}